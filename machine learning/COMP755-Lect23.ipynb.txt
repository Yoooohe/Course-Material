{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {
    "nbpresent": {
     "id": "aab7fd3c-11a1-4073-a957-c10735d7afae"
    },
    "slideshow": {
     "slide_type": "slide"
    }
   },
   "source": [
    "# COMP 755\n",
    "\n",
    "Today:\n",
    "\n",
    "Tricks for training Neural Networks\n",
    "\n",
    "\n",
    "$$\n",
    "\\renewcommand{\\vvec}[2]{\\left[ \\begin{array}{c} \\mathbf{#1}\\\\ \\mathbf{#2} \\end{array}\\right]}\n",
    "\\renewcommand{\\mmat}[4]{\\left[ \\begin{array}{cc} \\mathbf{#1}&\\mathbf{#2}\\\\ \\mathbf{#3}&\\mathbf{#4} \\end{array}\\right]}\n",
    "\\renewcommand{\\aaa}{\\mathbf{a}}\n",
    "\\renewcommand{\\AAA}{\\mathbf{A}}\n",
    "\\renewcommand{\\xyvec}{\\left[ \\begin{array}{c} \\xx\\\\\\yy \\end{array} \\right]}\n",
    "\\renewcommand{\\xyvecc}{\\left[ \\begin{array}{c} x^1\\\\y^1 \\end{array} \\right]}\n",
    "\\renewcommand{\\mm}{\\mathbf{m}}\n",
    "\\renewcommand{\\xx}{\\mathbf{x}}\n",
    "\\renewcommand{\\ff}{\\mathbf{f}}\n",
    "\\renewcommand{\\yy}{\\mathbf{y}}\n",
    "\\renewcommand{\\zz}{\\mathbf{z}}\n",
    "\\renewcommand{\\vv}{\\mathbf{v}}\n",
    "\\renewcommand{\\ee}{\\mathbf{e}}\n",
    "\\renewcommand{\\ww}{\\mathbf{w}}\n",
    "\\renewcommand{\\XX}{\\mathbf{X}}\n",
    "\\renewcommand{\\YY}{\\mathbf{Y}}\n",
    "\\renewcommand{\\WW}{\\mathbf{W}}\n",
    "\\renewcommand{\\VV}{\\mathbf{V}}\n",
    "\\renewcommand{\\DD}{\\mathbf{D}}\n",
    "\\renewcommand{\\dd}{\\mathbf{d}}\n",
    "\\renewcommand{\\ZZ}{\\mathbf{Z}}\n",
    "\\renewcommand{\\CC}{\\mathbf{C}}\n",
    "\\renewcommand{\\bbeta}{\\boldsymbol{\\mathbf{\\beta}}}\n",
    "\\renewcommand{\\ddelta}{\\boldsymbol{\\mathbf{\\delta}}}\n",
    "\\renewcommand{\\mmu}{\\boldsymbol{\\mathbf{\\mu}}}\n",
    "\\renewcommand{\\ssigma}{\\boldsymbol{\\mathbf{\\sigma}}}\n",
    "\\renewcommand{\\reals}{\\mathbb{R}}\n",
    "\\renewcommand{\\loglik}{\\mathcal{LL}}\n",
    "\\renewcommand{\\penloglik}{\\mathcal{PLL}}\n",
    "\\renewcommand{\\likelihood}{\\mathcal{L}}\n",
    "\\renewcommand{\\Data}{\\textrm{Data}}\n",
    "\\renewcommand{\\given}{ \\big| }\n",
    "\\renewcommand{\\MLE}{\\textrm{MLE}}\n",
    "\\renewcommand{\\EE}{\\mathbb{E}}\n",
    "\\renewcommand{\\EEE}{\\mathbf{E}}\n",
    "\\renewcommand{\\KL}{\\textrm{KL}}\n",
    "\\renewcommand{\\Bound}{\\mathcal{B}}\n",
    "\\renewcommand{\\tth}{\\textrm{th}}\n",
    "\\renewcommand{\\Gaussian}[2]{\\mathcal{N}\\left(#1,#2\\right)}\n",
    "\\renewcommand{\\norm}[1]{\\left\\lVert#1\\right\\rVert}\n",
    "\\renewcommand{\\ones}{\\mathbf{1}}\n",
    "\\renewcommand{\\corr}[2]{\\textrm{corr}(#1,#2)}\n",
    "\\renewcommand{\\diag}[1]{\\textrm{diag}\\left( #1 \\right)}\n",
    "\\renewcommand{\\sigmoid}[1]{\\sigma\\left(#1\\right)}\n",
    "\\renewcommand{\\myexp}[1]{\\exp\\left\\{#1\\right\\}}\n",
    "\\renewcommand{\\mylog}[1]{\\log\\left\\{#1\\right\\}}\n",
    "\\renewcommand{\\argmax}{\\mathop{\\textrm{argmax}}}\n",
    "\\renewcommand{\\new}{\\textrm{new}}\n",
    "\\renewcommand{\\old}{\\textrm{old}}\n",
    "\\renewcommand{\\bb}{\\mathbf{b}}\n",
    "\\renewcommand{\\ba}{\\mathbf{a}}\n",
    "\\renewcommand{\\bg}{\\mathbf{g}}\n",
    "\\renewcommand{\\BB}{\\mathbf{B}}\n",
    "\\renewcommand{\\BA}{\\mathbf{A}}\n",
    "\\renewcommand{\\BC}{\\mathbf{C}}\n",
    "\\renewcommand{\\UU}{\\mathbf{U}}\n",
    "\\renewcommand{\\uu}{\\mathbf{u}}\n",
    "\\renewcommand{\\hh}{\\mathbf{h}}\n",
    "\\renewcommand{\\SSS}{\\mathbf{S}}\n",
    "\\renewcommand{\\sss}{\\mathbf{s}}\n",
    "\\renewcommand{\\rr}{\\mathbf{r}}\n",
    "\\renewcommand{\\tr}[1]{\\textrm{tr}\\left\\{#1\\right\\}}\n",
    "\\renewcommand{\\argmin}{\\mathop{\\textrm{argmin}}}\n",
    "\\renewcommand{\\abs}[1]{\\left\\lvert#1\\right\\rvert}\n",
    "\\renewcommand{\\sign}{\\textrm{sign}}\n",
    "\\renewcommand{\\minimize}{\\mathop{\\textrm{minimize}}}\n",
    "\\renewcommand{\\subjectto}{\\mathop{\\textrm{subject to}}}\n",
    "\\renewcommand{\\evalat}[1]{\\Big|_{#1}} \n",
    "$$\n",
    "\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "slideshow": {
     "slide_type": "slide"
    }
   },
   "source": [
    "# Training neural networks is challenging\n",
    "\n",
    "Key tricks\n",
    "1. Data augmentation -- create more samples\n",
    "2. Intelligent initialization \n",
    "3. Improved optimization -- beyond gradient descent\n",
    "4. Regularization -- weight decay, dropout\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 49,
   "metadata": {
    "slideshow": {
     "slide_type": "slide"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.text.Text at 0x6b0356d8>"
      ]
     },
     "execution_count": 49,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x1b09b1d0>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "import numpy as np\n",
    "from sklearn.datasets import fetch_mldata\n",
    "import skimage.transform as trans\n",
    "import matplotlib.pyplot as plt\n",
    "%matplotlib inline\n",
    "\n",
    "mnist = fetch_mldata('MNIST original')\n",
    "\n",
    "\n",
    "show = lambda x: plt.imshow(x,cmap='gray_r',interpolation='None')\n",
    "digit = mnist.data[15000].reshape((28,28))\n",
    "plt.figure(figsize=(6,24))\n",
    "plt.subplot(1,4,1)\n",
    "show(digit)\n",
    "plt.title('Original')\n",
    "plt.subplot(1,4,2)\n",
    "show(digit+5*np.random.randn(28,28))\n",
    "plt.title('Noisy')\n",
    "plt.subplot(1,4,3)\n",
    "show(trans.rotate(digit,-20))\n",
    "plt.title('Rotated')\n",
    "plt.subplot(1,4,4)\n",
    "show(digit[:,::-1])\n",
    "plt.title('Flipped')\n",
    "\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "slideshow": {
     "slide_type": "slide"
    }
   },
   "source": [
    "# Data augmentation\n",
    "\n",
    "Data augmentation can mean two things:\n",
    "1. adding new features\n",
    "2. adding new samples \n",
    "\n",
    "In deep learning, typically, data augmentation refers to adding new samples.\n",
    "\n",
    "For example, in MNIST data -- images of handwritten digits -- typically data augmentations are:\n",
    "1. adding noise to pixels\n",
    "2. rotating images\n",
    "3. scaling, stretching, warping\n",
    "\n",
    "The purpose is to make the trained network invariant to these small transformations of the data and thus robust.\n",
    "\n",
    "Note that different types of data allow different augmentation.\n",
    "\n",
    "For example, you would flip an image of a dog and it would still be a dog."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "slideshow": {
     "slide_type": "slide"
    }
   },
   "source": [
    "# Issues with backprop \n",
    "\n",
    "Recall back-prop recursion\n",
    "\n",
    "$$\n",
    "\\frac{\\partial  \\textrm{loss}(\\hat{y},y)}{\\partial h_j^{l-1}} = \\sum_{i=1}^{n_{l}}\\frac{\\partial  \\textrm{loss}(\\hat{y},y)}{\\partial h_i^{l}} f'(z^l_i)w^l_{ij}\n",
    "$$\n",
    "\n",
    "For sigmoidal units\n",
    "$$\n",
    "f'(z^l_i) = \\sigmoid{z^l_i}\\left(1 - \\sigmoid{z^l_i}\\right)\n",
    "$$\n",
    "where $\\sigmoid{z} = \\frac{1}{1 + \\exp{-z}}$"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 62,
   "metadata": {
    "slideshow": {
     "slide_type": "slide"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.text.Text at 0x7e082978>"
      ]
     },
     "execution_count": 62,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x7ded40b8>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "z = np.arange(-20,20,0.01)\n",
    "sigmoid = lambda z: 1./(1. + np.exp(z))\n",
    "dsigmoid = lambda z: sigmoid(z)*(1 - sigmoid(z))\n",
    "\n",
    "plt.plot(z,dsigmoid(z))\n",
    "plt.title('Derivative of sigmoid',fontsize=25)\n",
    "plt.xlabel('$z$',fontsize=25)\n",
    "plt.ylabel('$f\\'(z)$',fontsize=25)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "slideshow": {
     "slide_type": "slide"
    }
   },
   "source": [
    "# Issues with backprop and sigmoids \n",
    "\n",
    "Derivatives for large inputs to sigmoid go to 0.\n",
    "\n",
    "If we initialize networks's weights with large values, the derivatives are going to be near zero -- slow progress.\n",
    "\n",
    "If we initalize nertworks's weight with small values, we need more iterations to get to larger values -- slow progress.\n",
    "\n",
    "Typical intialiation for sigmoidal nets called <a href=\"http://jmlr.org/proceedings/papers/v9/glorot10a/glorot10a.pdf\">Xavier initialization</a>:\n",
    "$$\n",
    "w^l_{i,j} \\sim \\textrm{Uniform}\\left[-, \\frac{\\sqrt{6} }{ \\sqrt{n_l + n_{l-1}}},\\frac{\\sqrt{6}}{\\sqrt{n_l + n_{l-1}}} \\right]\n",
    "$$\n",
    "ensures that the variance of layer outputs stays nearly fixed across layers.\n",
    "\n",
    "\n",
    "\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "slideshow": {
     "slide_type": "slide"
    }
   },
   "source": [
    "# Issues with backprop and ReLU\n",
    "\n",
    "Alternatively use rectified linear units ReLU. Their derivatives are constant.\n",
    "\n",
    "\\begin{eqnarray*}\n",
    "\\textrm{ReLU}(z) &=& \\begin{cases}\n",
    "z, & z>0,\\\\\n",
    "0, & z\\leq0\n",
    "\\end{cases}\\\\\n",
    "\\textrm{ReLU}'(z) &=& \\begin{cases}\n",
    "1, & z>0,\\\\\n",
    "0 , & z<0\n",
    "\\end{cases}\n",
    "\\end{eqnarray*}\n",
    "\n",
    "Recall computation of derivatives for weights\n",
    "$$\n",
    "\\frac{\\partial E}{w^l_{ij} } = \\frac{\\partial  \\textrm{loss}(\\hat{y},y)}{\\partial h_i^{l}} f'(z^l_i)h^{l-1}_j\n",
    "$$\n",
    "\n",
    "If a ReLU unit gets input $(z<0)$ then $f'(z)$ becomes zero and consequently $\\frac{\\partial E}{w^l_{ij} }$ is zero. \n",
    "\n",
    "If this unit is off  $(z<0)$ for all of the samples, the unit is \"dead\". \n",
    "\n",
    "A \"dead\" unit's weights will not change because their derivatives are zero.\n",
    "\n",
    "\n",
    "\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "slideshow": {
     "slide_type": "slide"
    }
   },
   "source": [
    "# Issues with backprop and ReLU\n",
    "\n",
    "An alternative is to use leaky ReLU:\n",
    "\n",
    "\\begin{eqnarray*}\n",
    "\\textrm{LReLU}(z) &=& \\begin{cases}\n",
    "z, & z>0,\\\\\n",
    "\\alpha z, & z\\leq0\n",
    "\\end{cases}\\\\\n",
    "\\textrm{LReLU}'(z) &=& \\begin{cases}\n",
    "1, & z>0,\\\\\n",
    "\\alpha , & z<0\n",
    "\\end{cases}\n",
    "\\end{eqnarray*}\n",
    "Leaky ReLU's do not turn off, and the derivative always is non-zero.\n",
    "\n",
    "However, we add another parameter $\\alpha$ that needs to be somehow tuned.\n",
    "\n",
    "State of the art is a slight variation of the leaky ReLU called randomized leaky relu, which randomly assigns value $\\alpha$ for each unit, throughout training.\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "slideshow": {
     "slide_type": "slide"
    }
   },
   "source": [
    "# Optimization issues -- learning rate\n",
    "\n",
    "We typically use gradient descent to train neural nets\n",
    "$$\n",
    "\\WW = \\WW - \\eta\\nabla_{\\WW}E(\\WW)\n",
    "$$\n",
    "\n",
    "Choice of a fixed $\\eta$, referred to as **learning rate** or **step size**, is challenging.\n",
    "\n",
    "![](bounce.png)\n",
    "Learning rate that generates good progress in reducing error in the early iterations, might too large **or** too small for late iterations.\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "Further some weights may require larger steps than others. Hence, even within a single iteration a single $\\eta$ might not be a good idea.\n",
    "\n",
    "Rather than tweaking learning rate, we will talk about how the direction in which we step can be adjusted.\n",
    "\n",
    "\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "slideshow": {
     "slide_type": "slide"
    }
   },
   "source": [
    "# Optimization issues -- zig-zag\n",
    "\n",
    "A typical gradient descent algorithm with fixed step size generates a zig-zag pattern\n",
    "\n",
    "![](zigzag.png)\n",
    "\n",
    "We would prefer to have our algorithm to move more along the $x$-axis \n",
    "\n",
    "![](momentum.png)\n",
    "\n",
    "Key insight here is that the average of the gradients over several iterations would cancel out the bouncing along the $y$-axis and leave a dominant $x$-axis contribution."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "collapsed": true,
    "slideshow": {
     "slide_type": "slide"
    }
   },
   "source": [
    "# Optimization issues -- using momentum to solve zig-zag\n",
    "\n",
    "The weighted average of gradients over the past iterations is referred to as momentum.\n",
    "\n",
    "Updates with momentum \n",
    "\n",
    "\\begin{eqnarray}\n",
    "\\vv^k &=& \\gamma \\vv^{k-1} + \\eta \\nabla_{\\WW}E(\\WW^{k-1})\\\\\n",
    "\\WW^k &=& \\WW^{k-1} - \\vv^k\n",
    "\\end{eqnarray}\n",
    "\n",
    "where $\\gamma<1.0$ is called momentum weight.\n",
    "\n",
    "If you unroll this a bit\n",
    "$$\n",
    "\\vv^k = \\gamma^2 \\vv^{k-2} + \\eta\\left(\\gamma\\nabla_{\\WW}E(\\WW^{k-2}) + \\nabla_{\\WW}E(\\WW^{k-1})\\right)\n",
    "$$\n",
    "\n",
    "Hence, the direction along which we take a step $\\vv^k$ carries information about previous gradients.\n",
    "\n",
    "The older gradients have smaller contribution $\\gamma^d$ for gradient  $d$ iterations ago.\n",
    "\n",
    "A more sophisticated momentum method -- Nesterov's accelerated gradient\n",
    "\\begin{eqnarray}\n",
    "\\vv^k &=& \\gamma \\vv^{k-1} + \\eta \\nabla_{\\WW}E(\\WW^{k-1} - \\gamma\\vv^{k-1})\\\\\n",
    "\\end{eqnarray}\n",
    "\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "slideshow": {
     "slide_type": "slide"
    }
   },
   "source": [
    "# Optimization issues -- gradient scaling techniques\n",
    "\n",
    "A number of different optimization techniques scale and reshape the gradients\n",
    "\n",
    "1. ADAGRAD\n",
    "2. ADADelta\n",
    "3. ADAM\n",
    "4. RMSprop\n",
    "\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "slideshow": {
     "slide_type": "slide"
    }
   },
   "source": [
    "# Gradient scaling -- RMSprop\n",
    "\n",
    "For each parameter, adjust the step-size based on how large its partial derivatives have been.\n",
    "\n",
    "\n",
    "\\begin{eqnarray}\n",
    "(\\mm^k)^2 &=& 0.9(\\mm^{k-1})^2 + 0.1\\nabla_{\\WW}E(\\WW^{k-1})^2\\\\\n",
    "\\WW^{k} &=& \\WW^{k}- \\frac{\\eta}{\\mm^k}\\nabla_{\\WW}E(\\WW^{k-1})\n",
    "\\end{eqnarray}\n",
    "\n",
    "\n",
    "The scaling is equal to a weighted average of gradient's squares across iterations.\n",
    "\n",
    "Weights with large changes are \"slowed down\".\n",
    "Weights with small changes are \"sped up\"."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "slideshow": {
     "slide_type": "slide"
    }
   },
   "source": [
    "# Optimization issues -- dealing with large datasets\n",
    "\n",
    "Large datasets are common. Even MNIST is fairly sizable 60k examples.\n",
    "\n",
    "Typical neural network training does not require pass through all of the data to compute a gradient.\n",
    "\n",
    "Instead, gradients are computed on small subsets of data (100s of samples) called mini-batches.\n",
    "\n",
    "The training is decomposed into **epochs**.\n",
    "\n",
    "In an epoch, training algorithm iterates over mini-batches and updates parameters after every mini-batch.\n",
    "\n",
    "A <a href=\"https://arxiv.org/abs/1609.04836\">recent paper</a> shows that the mini-batch training actually can outperform full-batch training \n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "slideshow": {
     "slide_type": "slide"
    }
   },
   "source": [
    "# Regularization -- weight decay \n",
    "\n",
    "Large number of parameters in neural networks makes it regularization necessary.\n",
    "\n",
    "Ridge penalty makes under appearance, under name **weight decay**.\n",
    "\n",
    "Objective becomes\n",
    "$$\n",
    "E(\\WW) + \\frac{\\lambda}{2}\\sum_l\\sum_{ij} (w^{l}_{ij})^2\n",
    "$$\n",
    "\n",
    "As usual this just means that gradients get a small modifiction\n",
    "$$\n",
    "\\frac{\\partial E}{\\partial w^{l}_{ij}} + \\lambda w^l_{ij}\n",
    "$$\n",
    "\n",
    "Weight decay, like ridge, shrinks weights down."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "slideshow": {
     "slide_type": "slide"
    }
   },
   "source": [
    "# Regularization -- early stopping\n",
    "\n",
    "Another effective way to ensure that weights do not get too large is to \n",
    "run the gradient descent for a small fixed number of iterations. This is called **early stopping**.\n",
    "\n",
    "In effect, this is very similar to weight decay, but it also saves computational time."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "slideshow": {
     "slide_type": "slide"
    }
   },
   "source": [
    "# Regularization -- dropout\n",
    "\n",
    "One of the more sophisticated regularization techniques is <a href=\"https://www.cs.toronto.edu/~hinton/absps/JMLRdropout.pdf\">**dropout**</a>.\n",
    "\n",
    "![](dropout.png)\n",
    "\n",
    "The idea is to randomly remove units from the network during the training phase.\n",
    "\n",
    "This prevents networks from replicating the same behavior in different units.\n",
    "\n",
    "Further, output of the network is more robust.\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "slideshow": {
     "slide_type": "slide"
    }
   },
   "source": [
    "# Demo of Theano \n",
    "\n",
    "One particularly useful package for training neural nets is <a href=\"http://deeplearning.net/software/theano/\">Theano</a>"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 46,
   "metadata": {
    "slideshow": {
     "slide_type": "skip"
    }
   },
   "outputs": [],
   "source": [
    "\n",
    "\n",
    "import numpy\n",
    "import matplotlib.pyplot as plt\n",
    "import theano\n",
    "import theano.tensor as T\n",
    "\n",
    "def sample_gaussian(m,C,N):\n",
    "    L = numpy.linalg.cholesky(C)\n",
    "    d = len(m)\n",
    "    # N samples with 0-mean and covariance C\n",
    "    x = numpy.dot(L,numpy.random.randn(d,N))\n",
    "    # use broadcasting to shift from 0-mean to m\n",
    "    # similar to doing repmat(m,[1 N]) + x\n",
    "    x = x + m\n",
    "    return x\n",
    "\n",
    "def gen_mog(means,covs,N):     \n",
    "    d = means.shape[0]\n",
    "    K = means.shape[1] \n",
    "    assert d == covs.shape[0] and d == covs.shape[1]\n",
    "    assert K == covs.shape[2]\n",
    "        \n",
    "    h = numpy.random.choice(K,size=N)    \n",
    "    x = numpy.empty((d,N))\n",
    "    for k in range(K):\n",
    "        m = means[:,k]\n",
    "        C = covs[:,:,k]        \n",
    "        ind = [i for i in range(len(h)) if h[i]==k]\n",
    "        x[:,ind] = sample_gaussian(m,C,len(ind))\n",
    "\n",
    "    x = x.astype('float32')\n",
    "    return x,h\n",
    "    \n",
    "def plot_data_2d(x,h,figid = \"data\",marker='o',prefix=None):\n",
    "    plt.title(figid)\n",
    "    h= h.astype('int')\n",
    "    N = x.shape[1]\n",
    "    if prefix is not None:\n",
    "        prefix = prefix + ' '\n",
    "    else:\n",
    "        prefix = ''\n",
    "    for c in range(max(h)+1):\n",
    "        ind = [i for i in range(N) if h[i] == c]\n",
    "        if not ind == []:\n",
    "            label = prefix + 'Class ' + str(c) \n",
    "            plt.plot(x[0,ind],x[1,ind],marker,label = label)\n",
    "    plt.legend(bbox_to_anchor=(1.05, 1), loc=2, borderaxespad=0.)            \n",
    "\n",
    "def plot_line(w,b,x0,x1):\n",
    "    y0 = -(w[0]*x0 + b)/w[1];\n",
    "    y1 = -(w[0]*x1 + b)/w[1];\n",
    "    plt.plot([x0,x1],[y0,y1],'-')\n",
    "    \n",
    "def plot_ws(w,b):\n",
    "    axes = plt.gca()\n",
    "    xlim = axes.get_xlim()\n",
    "    ylim = axes.get_ylim()\n",
    "    if len(w.shape)>1:\n",
    "        for i in range(w.shape[1]):\n",
    "            plot_line(w[:,i],b[i],xlim[0],xlim[1])\n",
    "    else:\n",
    "        plot_line(w,b,xlim[0],xlim[1])\n",
    "    axes.set_xlim(xlim)\n",
    "    axes.set_ylim(ylim)\n",
    "    plt.show()\n",
    "    \n",
    "def plot_costs(costs):\n",
    "    plt.plot(costs)    \n",
    "    plt.title('Costs')\n",
    "    \n",
    "    \n",
    "numpy.random.seed(1)\n",
    "N = 1000\n",
    "means = numpy.matrix([[ -0.7,0.7],\n",
    "                      [-0.7, 0.7]])\n",
    "K = means.shape[1]\n",
    "d = means.shape[0]\n",
    "covs = numpy.empty((d, d, K))\n",
    "for i in range(K):\n",
    "    covs[:, :, i] = numpy.diag([0.1, 0.1])\n",
    "\n",
    "data,labels = gen_mog(means, covs, N)\n",
    "label_to_predict = (labels == 0).astype('float32')\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 47,
   "metadata": {
    "slideshow": {
     "slide_type": "slide"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "0.946480578266\n"
     ]
    },
    {
     "data": {
      "image/png": "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\nFUFHVK10/sOWrrGla1yg2BoqnWOTA1dYWMgJJ5zAH/7wh6BDaXSqwafCT3/qE/xPfgJPPx10NCIi\nobNixQomTZpE7969adWqFfn5+YwcOZLp06eza1fl5AO/iGr62b17N9deey3du3endevWDBs2jPnz\nkzuWXDX4VJk2zdfkL7wQOnb0A/BEROSAPfvss5x77rnk5OTw3e9+l/79+7N7924WLFjA1KlTWbp0\nKQ888EDQYdbo4osvZs6cOUyePJmvfe1rPPTQQ4wdO5ZXXnmF4cOHJ+UzlOBTJSvLL36zYQN885vw\n6qvw9a8HHZWISJP2ySefUFxcTK9evXj55ZfpFLP2yI9+9CNuvvlmnn322QAjrN1bb73FE088wR13\n3MHkyZMB+M53vkP//v2ZOnUqCxYkvNlqvamJPpVatID//V8/je7UU+HTuizkJyIi1bntttvYvn07\ns2bNqpLco4qKivjxj39c7fGbN29mypQpDBgwgLy8PPLz8xk7dizvvffefmXvvvtu+vfvT25uLh06\ndOCYY47h8ccf3/f+tm3buOqqq+jVqxc5OTl07tyZMWPGsHjx4hqv4emnn6Z58+Zccskl+/a1bNmS\n73//+7zxxhusWbOmLj+KWinBp1rbtvC3v0HLlj7Jb6rpTrkiIo2ntBRGjoTevf3jhg3pf/5nnnmG\noqIihg4d2qDjV6xYwdy5cznjjDO46667mDp1KkuWLGH06NGsX79+X7mZM2dy5ZVX0r9/f373u99x\n0003MXDgQBYuXLivzKRJk5gxYwbjx4/n/vvv55prrqF169YsW7asxhgWL15Mnz59aNOmTZX9Q4YM\n2fd+MqiJvjF06eJXuxsxAs44A+bPh1atgo5KRDLc2Wf7FbYBVqyAs86CJLUOp+T8W7duZc2aNXzr\nW99q8DkGDBjARx99VGXfd77zHfr27cusWbO4PjLF+bnnnqN///5VauzxnnvuOS655BKmTZu2b9+U\nKVNqjWHdunV07dp1v/1du3bFOcfatWvrejk1Ug2+sfTpA888A4sXwwUXwN69QUckIhlu3bqaX6fb\n+bds2QJAXl5eg8+RHbPKaEVFBZs2baJ169b07duXRYsW7XuvXbt2rF69mnfeeafac7Vr146FCxey\nrp4XtnPnTlq2bLnf/pycnH3vJ4MSfGMaOhSefBL++le4/HKtdicigYqvRCaoVKbV+du2bQv4mnxD\n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\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0xc306f28>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "\n",
    "import numpy\n",
    "import theano\n",
    "import theano.tensor as T\n",
    "\n",
    "\n",
    "theano.config.optimizer = 'None'\n",
    "theano.config.exception_verbosity = 'high'\n",
    "\n",
    "X = T.matrix('X')\n",
    "y = T.vector('y')\n",
    "\n",
    "w = theano.shared(numpy.random.randn(2), name='w')\n",
    "b = theano.shared(0., name='b')\n",
    "h = 1.0 / (1.0 + T.exp(-T.dot(X.T,w) - b))\n",
    "\n",
    "ypredicted = h > 0.5\n",
    "\n",
    "lam = 0.001\n",
    "lr = 1\n",
    "iterations = 50\n",
    "\n",
    "cost = 1.0/float(N)*T.sum(-y*T.log(h) - (1.0 - y)*T.log(1.0-h))\n",
    "cost = cost + lam*T.sum(w ** 2)\n",
    "print cost.eval({X:data,y:label_to_predict})\n",
    "\n",
    "gradw,gradb = T.grad(cost,[w,b])\n",
    "updates = [(w, w - lr*gradw),(b, b - lr*gradb)]\n",
    "train = theano.function(inputs = [X,y],\n",
    "                        outputs = [cost],\n",
    "                        updates = updates)\n",
    "costs = []\n",
    "for i in range(iterations):\n",
    "    cost_value = train(data,label_to_predict)    \n",
    "    costs.append(cost_value[0])\n",
    "    \n",
    "plt.figure(figsize=(4,8))\n",
    "plt.subplot(2,1,1)\n",
    "plot_costs(costs)\n",
    "\n",
    "plt.subplot(2,1,2)\n",
    "plot_data_2d(data, \n",
    "             ypredicted.eval({X:data}),\n",
    "            marker='.')\n",
    "plot_ws(w.eval(),b.eval())\n",
    "    \n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "collapsed": true
   },
   "source": [
    "# A very interesting demo of convolutional nets in JavaScript\n",
    "\n",
    "<a href=\"http://cs.stanford.edu/people/karpathy/convnetjs/demo/mnist.html\">http://cs.stanford.edu/people/karpathy/convnetjs/demo/mnist.html </a>"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Today\n",
    "\n",
    "We skimmed the surface of practical issues involved in training neural nets.\n",
    "\n",
    "Recommendations:\n",
    "1. Leaky relu\n",
    "2. One of the ADA-methods or rmsProp for optimization\n",
    "3. Use dropout and weight-decay\n",
    "4. Do not implement from scratch -- use Theano, MXNet, TensorFlow or Caffe\n",
    "\n",
    "You do need to understand what different terms mean in order to use these techniques effectively."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "anaconda-cloud": {},
  "celltoolbar": "Slideshow",
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.6.3"
  },
  "nbpresent": {
   "slides": {
    "0351a772-c92a-4430-84b4-7130549e7ab0": {
     "id": "0351a772-c92a-4430-84b4-7130549e7ab0",
     "prev": "1ae7150b-6121-40bd-8f33-b1b0690791e2",
     "regions": {
      "da29fdf0-46b3-49f8-8047-2d5d7254a245": {
       "attrs": {
        "height": 0.8,
        "width": 0.8,
        "x": 0.1,
        "y": 0.1
       },
       "content": {
        "cell": "fbcdc5fe-8e7e-4180-9764-ecad0ef709ea",
        "part": "whole"
       },
       "id": "da29fdf0-46b3-49f8-8047-2d5d7254a245"
      }
     }
    },
    "12b628e8-f03d-4ade-acba-73b1c75754a9": {
     "id": "12b628e8-f03d-4ade-acba-73b1c75754a9",
     "prev": "ffc1d54c-925e-4648-8d83-24541d52be7c",
     "regions": {
      "7d32489a-204e-4b5c-b95b-a9fd5f7e447a": {
       "attrs": {
        "height": 0.8,
        "width": 0.8,
        "x": 0.1,
        "y": 0.1
       },
       "content": {
        "cell": "b934daf2-1dfd-4706-a216-f46f107d3fb7",
        "part": "whole"
       },
       "id": "7d32489a-204e-4b5c-b95b-a9fd5f7e447a"
      }
     }
    },
    "14c534af-5d17-41c3-a3b0-81839aa8692a": {
     "id": "14c534af-5d17-41c3-a3b0-81839aa8692a",
     "prev": "a7c7f5ef-322e-4638-9a05-4e6aab630bd7",
     "regions": {
      "f7032b61-9587-4bf6-99ef-c455b56a349c": {
       "attrs": {
        "height": 0.8,
        "width": 0.8,
        "x": 0.1,
        "y": 0.1
       },
       "content": {
        "cell": "8c34e974-39aa-46da-a01d-8cdfc4ee35c2",
        "part": "whole"
       },
       "id": "f7032b61-9587-4bf6-99ef-c455b56a349c"
      }
     }
    },
    "1ae7150b-6121-40bd-8f33-b1b0690791e2": {
     "id": "1ae7150b-6121-40bd-8f33-b1b0690791e2",
     "prev": "8600b916-dfb8-44a1-876a-6d80797c5899",
     "regions": {
      "d22b7fc2-48b8-4413-ad89-eb0b182d455a": {
       "attrs": {
        "height": 0.8,
        "width": 0.8,
        "x": 0.1,
        "y": 0.1
       },
       "content": {
        "cell": "e30a931b-932b-4b01-b4c1-884208eb4530",
        "part": "whole"
       },
       "id": "d22b7fc2-48b8-4413-ad89-eb0b182d455a"
      }
     }
    },
    "292fd08b-58d1-4a30-ae20-3a0ab5320860": {
     "id": "292fd08b-58d1-4a30-ae20-3a0ab5320860",
     "prev": "ddcfa80f-2c65-4afe-aa32-296ec97b2344",
     "regions": {
      "cbe3fa3e-c517-4207-ac11-d884ffa1f3ed": {
       "attrs": {
        "height": 0.8,
        "width": 0.8,
        "x": 0.1,
        "y": 0.1
       },
       "content": {
        "cell": "7cbecfc4-fa24-414c-82e4-fbb242fa3faf",
        "part": "whole"
       },
       "id": "cbe3fa3e-c517-4207-ac11-d884ffa1f3ed"
      }
     }
    },
    "2cdbba23-1148-4f6c-8549-692283c5e35c": {
     "id": "2cdbba23-1148-4f6c-8549-692283c5e35c",
     "prev": "eff734ad-96ec-463a-87fb-dda40cc8ce48",
     "regions": {
      "9724d964-f1ea-4f62-a7da-9bf35dfad5e7": {
       "attrs": {
        "height": 0.8,
        "width": 0.8,
        "x": 0.1,
        "y": 0.1
       },
       "content": {
        "cell": "e7cc0d43-4957-4271-bf7b-0a35ae71117c",
        "part": "whole"
       },
       "id": "9724d964-f1ea-4f62-a7da-9bf35dfad5e7"
      }
     }
    },
    "401fafc4-bb94-4bc6-a8b2-dee06ae8ae8b": {
     "id": "401fafc4-bb94-4bc6-a8b2-dee06ae8ae8b",
     "prev": "2cdbba23-1148-4f6c-8549-692283c5e35c",
     "regions": {
      "5b755dea-45ce-44d7-8dce-aecbebaabd58": {
       "attrs": {
        "height": 0.8,
        "width": 0.8,
        "x": 0.1,
        "y": 0.1
       },
       "content": {
        "cell": "107f8412-5f74-449a-b934-156820f0bbcf",
        "part": "whole"
       },
       "id": "5b755dea-45ce-44d7-8dce-aecbebaabd58"
      }
     }
    },
    "5446f7ea-d6d7-47b1-bba5-5bcec2a4fe25": {
     "id": "5446f7ea-d6d7-47b1-bba5-5bcec2a4fe25",
     "prev": "c5b602e5-22d8-4689-8a4c-acb935322846",
     "regions": {
      "df60a52d-fc25-4b64-b6c9-a04507dc6d76": {
       "attrs": {
        "height": 0.8,
        "width": 0.8,
        "x": 0.1,
        "y": 0.1
       },
       "content": {
        "cell": "14bb883c-5a7f-4e4e-b0ff-ad59c985dcb2",
        "part": "whole"
       },
       "id": "df60a52d-fc25-4b64-b6c9-a04507dc6d76"
      }
     }
    },
    "5623e543-fe11-4ac1-9102-c01ba6f47b2d": {
     "id": "5623e543-fe11-4ac1-9102-c01ba6f47b2d",
     "prev": null,
     "regions": {
      "2ecffa8e-1c79-43ef-b42d-bffa7cc4e3e7": {
       "attrs": {
        "height": 0.8,
        "width": 0.8,
        "x": 0.1,
        "y": 0.1
       },
       "content": {
        "cell": "aab7fd3c-11a1-4073-a957-c10735d7afae",
        "part": "whole"
       },
       "id": "2ecffa8e-1c79-43ef-b42d-bffa7cc4e3e7"
      }
     }
    },
    "5b0c87d2-037c-4ed2-bed3-f490bfa70ccf": {
     "id": "5b0c87d2-037c-4ed2-bed3-f490bfa70ccf",
     "prev": "6c826828-2be0-4c2e-b58f-af16d6eb14ad",
     "regions": {
      "02e13c85-fd99-4af5-a680-3d217e01cc92": {
       "attrs": {
        "height": 0.8,
        "width": 0.8,
        "x": 0.1,
        "y": 0.1
       },
       "content": {
        "cell": "84557d87-6b9c-4ddb-a44c-aac2c6b74479",
        "part": "whole"
       },
       "id": "02e13c85-fd99-4af5-a680-3d217e01cc92"
      }
     }
    },
    "6c826828-2be0-4c2e-b58f-af16d6eb14ad": {
     "id": "6c826828-2be0-4c2e-b58f-af16d6eb14ad",
     "prev": "14c534af-5d17-41c3-a3b0-81839aa8692a",
     "regions": {
      "432a5f24-6769-4f43-972d-ea82d6922c05": {
       "attrs": {
        "height": 0.8,
        "width": 0.8,
        "x": 0.1,
        "y": 0.1
       },
       "content": {
        "cell": "35539823-9e9b-4458-b888-23b67b4d6553",
        "part": "whole"
       },
       "id": "432a5f24-6769-4f43-972d-ea82d6922c05"
      }
     }
    },
    "8600b916-dfb8-44a1-876a-6d80797c5899": {
     "id": "8600b916-dfb8-44a1-876a-6d80797c5899",
     "prev": "865414d8-8321-4fbc-b7d3-fce492038da5",
     "regions": {
      "5855e7e6-e804-4aa5-8cf9-4479a558a6e7": {
       "attrs": {
        "height": 0.8,
        "width": 0.8,
        "x": 0.1,
        "y": 0.1
       },
       "content": {
        "cell": "4da9ff24-f0fe-4719-8e6a-275de188652f",
        "part": "whole"
       },
       "id": "5855e7e6-e804-4aa5-8cf9-4479a558a6e7"
      }
     }
    },
    "865414d8-8321-4fbc-b7d3-fce492038da5": {
     "id": "865414d8-8321-4fbc-b7d3-fce492038da5",
     "prev": "9b359c37-fe53-4ab5-a4f8-8b72091c2fab",
     "regions": {
      "62f2b0b2-bf80-4524-bb71-17cc3da900cb": {
       "attrs": {
        "height": 0.8,
        "width": 0.8,
        "x": 0.1,
        "y": 0.1
       },
       "content": {
        "cell": "7d3a96df-84a2-481a-a4e4-49ac4837dfbf",
        "part": "whole"
       },
       "id": "62f2b0b2-bf80-4524-bb71-17cc3da900cb"
      }
     }
    },
    "9b359c37-fe53-4ab5-a4f8-8b72091c2fab": {
     "id": "9b359c37-fe53-4ab5-a4f8-8b72091c2fab",
     "prev": "5623e543-fe11-4ac1-9102-c01ba6f47b2d",
     "regions": {
      "7bcfde74-125c-4cea-afdb-a2c39805f36c": {
       "attrs": {
        "height": 0.8,
        "width": 0.8,
        "x": 0.1,
        "y": 0.1
       },
       "content": {
        "cell": "e2b9a449-7f63-483e-9e3d-734d6c16887a",
        "part": "whole"
       },
       "id": "7bcfde74-125c-4cea-afdb-a2c39805f36c"
      }
     }
    },
    "a7c7f5ef-322e-4638-9a05-4e6aab630bd7": {
     "id": "a7c7f5ef-322e-4638-9a05-4e6aab630bd7",
     "prev": "401fafc4-bb94-4bc6-a8b2-dee06ae8ae8b",
     "regions": {
      "6dd5826b-c385-41b7-b84a-2995f50f89a6": {
       "attrs": {
        "height": 0.8,
        "width": 0.8,
        "x": 0.1,
        "y": 0.1
       },
       "content": {
        "cell": "595413d3-19fa-4bee-9f22-ced173614597",
        "part": "whole"
       },
       "id": "6dd5826b-c385-41b7-b84a-2995f50f89a6"
      }
     }
    },
    "c5b602e5-22d8-4689-8a4c-acb935322846": {
     "id": "c5b602e5-22d8-4689-8a4c-acb935322846",
     "prev": "12b628e8-f03d-4ade-acba-73b1c75754a9",
     "regions": {
      "609ea961-e72b-4ed6-8041-ee84c2a9203f": {
       "attrs": {
        "height": 0.8,
        "width": 0.8,
        "x": 0.1,
        "y": 0.1
       },
       "content": {
        "cell": "0d29e769-fc04-4a74-9eb2-30e115210e9c",
        "part": "whole"
       },
       "id": "609ea961-e72b-4ed6-8041-ee84c2a9203f"
      }
     }
    },
    "d4238c0e-8429-40b5-90fd-4e82eafd70b5": {
     "id": "d4238c0e-8429-40b5-90fd-4e82eafd70b5",
     "prev": "5b0c87d2-037c-4ed2-bed3-f490bfa70ccf",
     "regions": {
      "07e14a93-6398-42fe-b609-7caea3857a56": {
       "attrs": {
        "height": 0.8,
        "width": 0.8,
        "x": 0.1,
        "y": 0.1
       },
       "content": {
        "cell": "f60716a0-d1a3-4852-ae64-94199ef71bbe",
        "part": "whole"
       },
       "id": "07e14a93-6398-42fe-b609-7caea3857a56"
      }
     }
    },
    "ddcfa80f-2c65-4afe-aa32-296ec97b2344": {
     "id": "ddcfa80f-2c65-4afe-aa32-296ec97b2344",
     "prev": "5446f7ea-d6d7-47b1-bba5-5bcec2a4fe25",
     "regions": {
      "f296dad0-361a-4660-a095-e82b3adf102a": {
       "attrs": {
        "height": 0.8,
        "width": 0.8,
        "x": 0.1,
        "y": 0.1
       },
       "content": {
        "cell": "7d9ddcb3-65ab-4635-95f1-f919c084cf8a",
        "part": "whole"
       },
       "id": "f296dad0-361a-4660-a095-e82b3adf102a"
      }
     }
    },
    "eff734ad-96ec-463a-87fb-dda40cc8ce48": {
     "id": "eff734ad-96ec-463a-87fb-dda40cc8ce48",
     "prev": "292fd08b-58d1-4a30-ae20-3a0ab5320860",
     "regions": {
      "3e138a53-a7b2-44d0-bff0-379033d9849d": {
       "attrs": {
        "height": 0.8,
        "width": 0.8,
        "x": 0.1,
        "y": 0.1
       },
       "content": {
        "cell": "cb0cc60b-b4e5-400d-9e36-6370185f40b1",
        "part": "whole"
       },
       "id": "3e138a53-a7b2-44d0-bff0-379033d9849d"
      }
     }
    },
    "ffc1d54c-925e-4648-8d83-24541d52be7c": {
     "id": "ffc1d54c-925e-4648-8d83-24541d52be7c",
     "prev": "0351a772-c92a-4430-84b4-7130549e7ab0",
     "regions": {
      "251cd137-0738-4f41-b40d-1498d0ff49e6": {
       "attrs": {
        "height": 0.8,
        "width": 0.8,
        "x": 0.1,
        "y": 0.1
       },
       "content": {
        "cell": "1b3011bf-b293-454a-b391-c366d739f399",
        "part": "whole"
       },
       "id": "251cd137-0738-4f41-b40d-1498d0ff49e6"
      }
     }
    }
   },
   "themes": {}
  }
 },
 "nbformat": 4,
 "nbformat_minor": 1
}
